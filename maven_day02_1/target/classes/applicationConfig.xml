<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation=" http://www.springframework.org/schema/beans
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop.xsd
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/mvc
                            http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--  dao层配置开始  -->

    <!--  配置连接池,还可以使用c3p0中的ComboPooledDataSource  -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql:///maven?serverTimezone=UTC"></property>
        <property name="username" value="root"></property>
        <property name="password" value="zjx19950426."></property>
    </bean>

    <!--  SqlSession线程不安全，配置SqlSessionFactory  -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--  扫描pojo包，给包下所有pojo对象起别名 -->
        <property name="typeAliasesPackage" value="com.itzjx.domain"></property>
    </bean>

    <!-- 扫描接口包路径，生成包下所有接口的代理对象，并且放入spring容器,
    作用与SqlMapConfig.xml中mapper标签的属性一样，是Spring整合Mybatis的结果   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itzjx.dao"></property>
    </bean>
    <!--  dao层配置结束  -->

    <!--  service层配置文件开始  -->
    <context:component-scan base-package="com.itzjx.service" />

    <!--  aop即面向切面编程,切面就是切入点和通知(增强类)的组合-->
    <!--  配置事务管理器,即增强类  -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--  配置事务的通知  -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
        </tx:attributes>
    </tx:advice> 
    
    <!--  配置切面  -->
    <aop:config>
        <aop:pointcut id="pt" expression="execution(* com.itzjx.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt"></aop:advisor>
    </aop:config>
    <!--  service层配置文件结束  -->


</beans>